/** @format */

:root {
    --title-color-classic: #f4e9e2;
    --title-color-neon: #0f0;
    --title-color-retro: #ffcc00;
}
/* Reset and base styles */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    /* outline: dotted red; */
}

body {
    display: grid;
    place-content: center;
    height: 100vh;
    font-family: Karla, sans-serif;
    line-height: 1.6;
    background-color: #0b2434;
}

/* Layout and structure */
main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    gap: 1em;
    height: 560px;
    max-width: 700px;
    padding: 1.5em;
    border-radius: 5px;
    background-color: #f5f5f5;
}

.dice-container {
    display: grid;
    grid-template: repeat(2, 1fr) / repeat(5, 1fr);
    gap: 1.25em;
}

/* Components */
.die {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 50px;
    width: 50px;
    border-radius: 10px;
    background-color: #ffffff;
    box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.25);
    cursor: pointer;
}

.dot {
    position: absolute;
    width: 10px; /* Size of the dot */
    height: 10px; /* Size of the dot */
    border-radius: 50%; /* Make it round */
    background-color: black; /* Color of the dot */
}

/* Center dot (for odd numbers) */
.center-dot {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Top left dot */
.top-left {
    top: 6px;
    left: 6px;
}

/* Top right dot */
.top-right {
    top: 6px;
    right: 6px;
}

/* Bottom left dot */
.bottom-left {
    bottom: 6px;
    left: 6px;
}

/* Bottom right dot */
.bottom-right {
    bottom: 6px;
    right: 6px;
}

/* Middle left dot (for six) */
.middle-left {
    top: 50%;
    left: 6px;
    transform: translateY(-50%);
}

/* Middle right dot (for six) */
.middle-right {
    top: 50%;
    right: 6px;
    transform: translateY(-50%);
}

/* Center top dot (for four and five) */
.center-top {
    top: 6px;
    left: 50%;
    transform: translateX(-50%);
}

/* Center bottom dot (for four and five) */
.center-bottom {
    bottom: 6px;
    left: 50%;
    transform: translateX(-50%);
}

/* Typography and text elements */
.title {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto;
    width: 250px;
    height: 50px;
    font-weight: 700;
    font-size: 2.5rem;
    color: #5035ff;
    transition: color 0.3s ease;
}

.instructions {
    font-family: 'Inter', sans-serif;
    font-size: 1.25rem;
    font-weight: 400;
    text-align: center;
    color: #0b2434;
}

.die-num {
    font-size: 2rem;
}

/* Interactive elements */
button {
    margin-top: 0.5em;
    padding: 0.75em 1.5em;
    border: none;
    border-radius: 5px;
    font-size: 1.25rem;
    color: white;
    transition: background-color 0.3s ease, transform 0.3s ease,
        box-shadow 0.3s ease;
    cursor: pointer;
}

button:hover {
    transform: scale(1.025);
}

button:active {
    transform: scale(0.975);
}

/* Theme-specific styles */

/* CLASSIC */
.theme-classic {
    background-image: url('/classic-background.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

.theme-classic .title {
    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);
    color: #3d2c29;
}

.theme-classic .title,
.theme-classic .instructions,
.theme-classic button {
    font-family: 'Playfair Display', serif;
    /* color: var(--title-color-classic); */
    /* text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.75); */
}

.theme-classic .instructions {
    color: #ffe9d1;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.75);
}

.theme-classic button {
    margin-top: 0.5em;
    padding: 0.75em 1.5em;
    border-radius: 5px;
    font-size: 1.25rem;
    background: rgba(216, 202, 168, 0.5);
    color: #3d2c29;
    box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.25);
    transition: all 0.3s ease-in-out;
    cursor: pointer;
}

.theme-classic button:hover {
    background: rgba(255, 255, 255, 0.3);
    border-color: #d4c3b2;
}

.theme-classic button:active {
    background: rgba(255, 255, 255, 0.1);
    border-color: #a48267;
}

.theme-classic .dot {
    background-color: #3f352f;
}

.theme-classic .die {
    background-color: #f0e5d8;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1), 0 5px 5px rgba(0, 0, 0, 0.25);
    background-image: url('/classic-dice.jpg');
}

.theme-classic .die.held {
    transform: scale(1.1);
    background-color: #c7c2bd;
    box-shadow: inset 0 0 12px rgba(0, 0, 0, 0.3);
    background-image: url('/classic-dice-held.jpg');
}

@keyframes scaleAndFade {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  50% {
    transform: scale(1.2);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

.classic-end-game-effect {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.star {
  background-color: gold;
  width: 50px;
  height: 50px;
  clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
  animation: scaleAndFade 2s ease-in-out infinite;
}

/* ----- NEON ----- */

.theme-neon {
    background-image: url('/neon-background.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    animation: neonBgAnimation 5s infinite alternate;
}

@keyframes neonBgAnimation {
    0% {
        filter: brightness(1);
    }
    100% {
        filter: brightness(1.25);
    }
}

.theme-neon .title,
.theme-neon .instructions {
    font-family: 'Orbitron', sans-serif;
    color: var(--title-color-neon);
    text-shadow: 0 0 10px var(--title-color-neon),
        0 0 20px var(--title-color-neon);
}

.theme-neon .die {
    background-color: rgba(255, 255, 255, 0.75);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.75),
        0 0 20px rgba(255, 255, 255, 0.75);
}

.theme-neon .dot {
    background-color: #ff00ff;
    box-shadow: 0 0 10px #ff00ff, 0 0 20px #ff00ff;
    border: 2px solid #ffffff;
}

.theme-neon button {
    font-family: 'Orbitron', sans-serif;
    background-color: rgba(0, 255, 0, 0.6);
    color: #000;
    text-shadow: 0 0 8px #000;
    box-shadow: 0 0 10px #00ff00, 0 0 20px #00ff00;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

.theme-neon button:hover {
    background-color: rgba(0, 255, 0, 0.7);
    box-shadow: 0 0 15px #00ff00, 0 0 30px #00ff00;
}

.theme-neon button:active {
    background-color: rgba(0, 220, 0, 0.5);
    box-shadow: 0 0 10px #00cc00, 0 0 20px #00cc00;
}

.theme-neon .die.held {
    transform: scale(1.1);
    background-color: rgba(255, 0, 255, 0.75);
    box-shadow: 0 0 10px rgba(255, 0, 255, 0.75),
        0 0 20px rgba(255, 0, 255, 0.75), 0 0 30px rgba(255, 0, 255, 0.75); 
    transition: transform 0.3s ease, background-color 0.3s ease,
        box-shadow 0.3s ease;
}

.theme-neon .die.held .dot {
    background-color: #ff00ff;
    box-shadow: 0 0 5px #ff00ff, 0 0 10px #ff00ff;
}

@keyframes neonBurst {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

.neon-end-game-effect {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.burst-dot {
  background-color: #0f0; 
  width: 10px;
  height: 10px;
  border-radius: 50%;
  box-shadow: 0 0 10px #0f0, 0 0 20px #0f0;
  animation: neonBurst 1s ease-out infinite;
  position: absolute;
}

/* Position the dots around the center */
.burst-dot:nth-child(1) { transform-origin: 50% 150px; }
.burst-dot:nth-child(2) { transform-origin: 150px 50%; }
.burst-dot:nth-child(3) { transform-origin: 50% -150px; }
.burst-dot:nth-child(4) { transform-origin: -150px 50%; }
.burst-dot:nth-child(5) { transform-origin: 100px 100px; }
.burst-dot:nth-child(6) { transform-origin: -100px 100px; }
.burst-dot:nth-child(7) { transform-origin: 100px -100px; }
.burst-dot:nth-child(8) { transform-origin: -100px -100px; }


/* RETRO */
.theme-retro {
    background-image: url('/retro-background.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    font-family: 'Press Start 2P', cursive;
}

.theme-retro .title,
.theme-retro .instructions {
    color: var(--title-color-retro);
    text-shadow: 0 0 5px #ffcc00, 0 0 10px #ffcc00;
}

.theme-retro .title {
    font-size: 2rem;
}

.theme-retro .instructions {
    color: #ffd634;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 5px;
    text-shadow: 0 0 10px #000, 0 0 15px #000;
    font-weight: bold;
}

.theme-retro .die {
    border: 3px dotted #00ff00;
    background-color: #000;
}

.theme-retro .dot {
    background-color: #ffcc00; 
    box-shadow: 0 0 5px #ffcc00, 0 0 10px #ffcc00; 
}

.theme-retro button {
    font-family: 'Press Start 2P', cursive;
    background-color: #00ff00; 
    border: 2px solid #ffcc00; 
    box-shadow: 0 0 5px #ffcc00, 0 0 10px #ffcc00; 
    color: #000;
    text-shadow: 0 0 5px #ffcc00, 0 0 10px #ffcc00; 
}

.theme-retro button:hover {
    background-color: #ffcc00; 
    color: #000;
    border-color: #00ff00; 
    box-shadow: 0 0 10px #00ff00, 0 0 15px #00ff00; 
}

.theme-retro .die.held {
    transform: scale(1.1); 
    border-color: #ff0000; 
    box-shadow: 0 0 10px #ff0000, 0 0 15px #ff0000; 
}

@keyframes pixelBurst {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

.retro-end-game-effect {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.pixel {
  width: 100px;
  height: 100px;
  background-color: #ffcc00; /* Retro color */
  margin: 2px;
  animation: pixelBurst 1s ease-out infinite;
}

/* Position each pixel to burst outwards */
.pixel:nth-child(1) { animation-delay: 0.1s; transform: translate(-20px, -20px); }
.pixel:nth-child(2) { animation-delay: 0.2s; transform: translate(20px, -20px); }
.pixel:nth-child(3) { animation-delay: 0.3s; transform: translate(-20px, 20px); }
.pixel:nth-child(4) { animation-delay: 0.4s; transform: translate(20px, 20px); }
